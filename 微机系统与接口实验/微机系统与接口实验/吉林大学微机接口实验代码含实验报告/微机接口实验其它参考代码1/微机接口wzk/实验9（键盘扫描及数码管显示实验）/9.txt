IO8255_A	EQU 0600H	;8255_A数据端口地址，对应显示器的位选码和对键盘的输出
IO8255_B	EQU 0602H	;8255_B数据端口地址，对应段码
IO8255_C	EQU 0604H	;8255_C数据端口地址，对应来自键盘的输入
IO8255_CTR	EQU 0606H	;8255控制端口地址

SSTACK  SEGMENT STACK
    DW 64 DUP(?)
SSTACK  ENDS

DATA	SEGMENT

KEY_CODE:	DB	11101110B
		DB	11011110B	;第0行第1列，1键的位置码
		DB	10111110B
		DB	01111110B
		DB	11101101B
		DB	11011101B
		DB	10111101B
		DB	01111101B
		DB	11101011B
		DB	11011011B
		DB	10111011B
		DB	01111011B
		DB	11100111B
		DB	11010111B
		DB	10110111B
		DB	01110111B
		
SEG_CODE:	DB	3FH	;0的段码
		DB	06H	;1的段码
		DB	5BH	;2的段码
		DB	4FH	;3的段码
		DB	66H	;4的段码
		DB	6DH	;5的段码
		DB	7DH	;6的段码
		DB	07H	;7的段码
		DB	7FH	;8的段码
		DB	6FH	;9的段码
		DB	77H	;A的段码
		DB	7CH	;B的段码
		DB	39H	;C的段码
		DB	5EH	;D的段码
		DB	79H	;E的段码
		DB	71H	;F的段码
		
BUF:	DB	00H	;最左数码管的段码
		DB	00H
		DB	00H
		DB	00H
		DB	00H
		DB	00H	;最右数码管的段码

DATA 	ENDS

CODE	SEGMENT
    	ASSUME	CS:CODE,DS:DATA
START:	MOV		AX,DATA
		MOV		DS,AX
		CALL	INIT_8255
		
X1:		MOV		BX,0
		LEA		SI,BUF
		MOV		AH,0FEH			;位选码11111110B，选择最左侧的位

Y1:		
		XOR		AL,AL			;置位选码00000000B，即任何位都不选
		MOV		DX,IO8255_B		;以清楚上次显示的干扰
		OUT		DX,AL
		CALL	SCAN_KB
		JNZ		Y2
		
		
		MOV		AL,AH			;设置位选码
	   	MOV		DX,IO8255_A
	   	OUT		DX,AL

		MOV		AL,[SI+BX]		;设置段码
		MOV		DX,IO8255_B
	   	OUT		DX,AL
		
		CALL	D20ms
		
	   	ROL		AH,1			;位选码循环左移，实际位右移
		ADD		BX,1
	   	CMP		AH,0BFH
		JNZ		Y1				;6位循环显示完毕，开始检测键盘输入
		JMP		X1
		
	   	
Y2:		;以下为延时检测键盘输入
		CALL	D20ms
		XOR		AL,AL
	   	MOV		DX,IO8255_B
	   	OUT		DX,AL			;置段码00000000B，即不显示	
		
		MOV		DX,IO8255_A
		MOV		AL,00H
		OUT		DX,AL
		MOV		DX,IO8255_C
		IN		AL,DX
		AND		AL,0FH
		CMP		AL,0FH
		JZ		X1
		MOV		AH,11111110B
		MOV		CX,4

X2:		MOV		DX,IO8255_A
		MOV		AL,AH
		OUT		DX,AL
		MOV		DX,IO8255_C
		IN		AL,DX
		AND		AL,0FH
		CMP		AL,0FH
		JNZ		X3
		ROL		AH,1
		LOOP	X2
		MOV		AH,80H
		JMP		X1

X3:		MOV		CL,4
		SHL		AH,CL
		OR		AL,AH
		LEA		BX,KEY_CODE
		MOV		CL,0

X4:		CMP		AL,[BX]
		JZ		X5		;找到键号，并存储在CL里，跳转X5
		INC		CL
		INC		BX
		CMP		CL,10H
		JNZ		X4
		MOV		AH,0FFH
		JMP		X1

X5:		LEA		SI,SEG_CODE
		MOV		CH,00H
		ADD		SI,CX	
		MOV		DL,[SI]			;将所需显示的数字段码存储在DL里
		
		
Z0:		LEA		SI,BUF
		MOV		BX,0
		MOV		CX,5

X6:		MOV		AL,[SI+BX+1]
		MOV		[SI+BX],AL
		INC		BX
		LOOP 	X6
		
		MOV		[SI+BX],DL
		
X7:		MOV		CX,0FFFH
Z1:		MOV		BX,0
		LEA		SI,BUF
		MOV		AH,0FEH			;位选码11111110B，选择最左侧的位
		

Y7:		
		PUSH	DX
		XOR		AL,AL			;置位选码00000000B，即任何位都不选
		MOV		DX,IO8255_B		;以清楚上次显示的干扰
		OUT		DX,AL		
		MOV		AL,AH			;设置位选码
	   	MOV		DX,IO8255_A
	   	OUT		DX,AL
		MOV		AL,[SI+BX]		;设置段码
		MOV		DX,IO8255_B
	   	OUT		DX,AL
	   	POP		DX
	   	
		ROL		AH,1			;位选码循环左移，实际位右移
		ADD		BX,1
	   	CMP		AH,0BFH
		JNZ		Y7				;6位循环显示完毕
		LOOP	Z1
		
		PUSH	DX
		XOR		AL,AL			;置位选码00000000B，即任何位都不选
		MOV		DX,IO8255_B		;以清楚上次显示的干扰
		OUT		DX,AL
		POP		DX		
		CALL	SCAN_KB
		
		JNZ		Z0
		JMP		X1
		
XEND:	MOV		AH,4CH
		INT		21H
		
PROC	D20ms	;消抖用延时子程序
		PUSH 	CX
		MOV 	CX,0FFH
A5:		LOOP 	A5
		POP 	CX
		RET
ENDP

PROC	DELAY
		PUSH	CX
		MOV		CX,0FFFFH
A6:		LOOP	A6
		POP		CX
		RET
ENDP
		
		
PROC	SCAN_KB	;以下为循环检测键盘输入
		PUSH	DX
		MOV		DX,IO8255_A
		MOV		AL,00H
		OUT		DX,AL
		MOV		DX,IO8255_C
		IN		AL,DX
		AND		AL,0FH
		CMP		AL,0FH
		POP		DX
		RET
ENDP

PROC	INIT_8255
		MOV		AL,10000001B
		MOV		DX,IO8255_CTR
		OUT		DX,AL			;初始化 8255
		RET
ENDP

CODE	ENDS
    END START